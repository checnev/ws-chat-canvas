{"version":3,"sources":["lib/api/Request.ts","lib/api/WSApi.ts","lib/user/User.ts","context/user.tsx","containers/PrivateRoute/index.tsx","utils/cn.ts","components/common/Container/index.tsx","components/common/Menu/Menu/index.tsx","components/common/Menu/Item/index.tsx","components/blocks/Layout/Header/Menu/index.tsx","components/common/Grid/Row/index.tsx","components/common/Grid/Column/index.tsx","components/UserInfo/index.tsx","components/blocks/Layout/Header/index.tsx","components/blocks/Layout/Content/index.tsx","components/blocks/Layout/Footer/index.tsx","components/blocks/Layout/index.tsx","components/Chat/Dialog/Message/index.tsx","components/Chat/Dialog/index.tsx","containers/Chat/Dialog.tsx","components/Chat/Form/index.tsx","containers/Chat/Form.tsx","components/Chat/index.tsx","components/UserList/index.tsx","services/UserService.ts","containers/OnlineUserList/index.tsx","components/pages/Chat/index.tsx","lib/base/subscription.ts","lib/canvas/Point.ts","context/canvas.tsx","components/blocks/ScalableCanvas/index.tsx","components/blocks/SceneCanvas/index.tsx","containers/PublicCanvas/index.tsx","components/pages/Canvas/index.tsx","components/common/Field/index.tsx","constants/colors.ts","components/SelectColor/index.tsx","components/common/Button/index.tsx","components/AuthForm/index.tsx","utils/random.ts","containers/AuthForm/index.tsx","components/blocks/WelcomeCanvas/index.tsx","components/pages/Main/index.tsx","components/pages/SignIn/index.tsx","components/pages/NotFound/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Request","type","data","object","WSApi","ws","handlers","recieve","event","message","JSON","parse","isRequest","request","forEach","handler","error","this","WebSocket","process","addEventListener","Array","isArray","push","handlerIndex","findIndex","reqHandler","splice","length","subscribe","onceHandler","unsubscribe","send","stringify","instance","User","id","name","color","UserContext","React","createContext","user","api","isFetching","signin","displayName","UserProvider","setState","getInstance","once","req","state","Provider","value","props","children","Component","PrivateRoute","context","otherProps","render","to","contextType","withNaming","e","m","v","Container","container","cn","styleProps","className","Menu","menu","clsx","orientation","role","defaultProps","MenuItem","menuItems","anchor","exact","HeaderMenu","menuWrapperRef","createRef","isOpen","toggleMenu","closeMenu","current","contains","target","document","documentElement","removeEventListener","ref","open","onClick","map","menuItem","activeClassName","GridRow","row","GridColumn","column","UserInfo","userInfo","style","backgroundColor","toUpperCase","Header","header","maxWidth","alignItems","xs","sm","Content","content","Footer","footer","justifyContent","Date","getFullYear","PureComponent","Layout","layout","fixed","Message","author","date","text","direction","toLocaleString","replace","Dialog","messagesRef","messages","scrollBy","top","scrollHeight","behavior","dialog","DialogContainer","recieveMessage","ChatForm","chatForm","placeholder","onChange","handleChange","onBlur","handleBlur","values","ChatFormContainer","sendMessage","initialValues","onSubmit","resetForm","trim","validate","errors","Chat","chat","UserList","userList","users","UserService","fetch","mode","then","res","json","UserOnlineList","join","leave","leaveUser","leaveUserIndex","getAll","ChatPage","chatPage","OnlineUserList","Subscription","listeners","listener","listenerIndex","Point","x","y","point","point1","point2","CanvasContext","lineColor","lineWidth","width","height","scale","isDrawing","startDraw","endDraw","movePen","drawLine","setScale","setLineWidth","setColor","subscription","contextRef","CanvasProvider","canvasRef","ctx","lastDrawTime","lastPoint","setIsDrawing","from","strokeStyle","beginPath","moveTo","lineTo","stroke","now","newPoint","nativeEvent","offsetX","offsetY","draw","lastPointScale","newPointScale","dispatch","isEqual","getContext","touchAction","lineCap","lineJoin","ScalableCanvas","wrapperRef","resize","clientWidth","window","scalableCanvas","onPointerMove","onPointerDown","SceneCanvas","changeLineWidth","sceneCanvas","active","PublicCanvas","bufferPath","broadcastTimerID","onStartDraw","setInterval","broadcastPath","onDraw","path","onRecieveDraw","paths","canvas","clearInterval","CanvasPage","canvasPage","Consumer","Field","invalid","label","helpMessage","input","hasLabel","Boolean","colors","ColorSelector","colorSelector","checked","Button","button","AuthForm","form","fetching","touched","randomNumber","min","max","rand","Math","random","floor","AuthFormContainer","WelcomeCanvas","imageRef","onLoadImage","drawImage","welcomeCanvas","src","alt","onLoad","MainPage","mainPage","md","SignInPage","signinPage","NotFound","notFoundPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.40c018c5.chunk.js","sourcesContent":["class Request {\n  constructor(public type: string, public data?: any) {}\n\n  static isRequest(object: any) {\n    return object.type && typeof object.type === 'string';\n  }\n}\n\nexport default Request;\n","import Request from './Request';\n\ntype RequestHandler = (request: Request) => any;\n\nclass WSApi {\n  static instance: WSApi;\n\n  readonly ws;\n  private handlers: Record<string, RequestHandler[]> = {};\n\n  private constructor() {\n    this.ws = new WebSocket(process.env.REACT_APP_WS_URL as string);\n    this.ws.addEventListener('message', this.recieve);\n  }\n\n  static getInstance(): WSApi {\n    if (!WSApi.instance) {\n      WSApi.instance = new WSApi();\n    }\n\n    return WSApi.instance;\n  }\n\n  subscribe(type: string, handler: RequestHandler) {\n    if (Array.isArray(this.handlers[type])) {\n      this.handlers[type].push(handler);\n    } else {\n      this.handlers[type] = [handler];\n    }\n  }\n\n  unsubscribe(type: string, handler: RequestHandler) {\n    if (this.handlers[type]) {\n      const handlerIndex = this.handlers[type].findIndex((reqHandler) => reqHandler === handler);\n\n      if (handlerIndex !== -1) {\n        this.handlers[type].splice(handlerIndex, 1);\n      }\n\n      if (this.handlers[type].length === 0) {\n        delete this.handlers[type];\n      }\n    }\n  }\n\n  once(type: string, handler: RequestHandler) {\n    const onceHandler = (request: Request) => {\n      handler(request);\n\n      this.unsubscribe(type, onceHandler);\n    };\n\n    this.subscribe(type, onceHandler);\n  }\n\n  send(type: string, data?: any) {\n    const request = new Request(type, data);\n    this.ws.send(JSON.stringify(request));\n  }\n\n  private recieve = (event: MessageEvent) => {\n    try {\n      const message = JSON.parse(event.data);\n\n      if (Request.isRequest(message)) {\n        const request = new Request(message.type, message.data);\n\n        this.handlers[request.type].forEach((handler) => {\n          handler(request);\n        });\n      }\n    } catch (error) {\n    }\n  };\n}\n\nexport default WSApi;\n","import { Color } from 'constants/colors';\n\nexport interface IUser {\n  name: string;\n  color: Color;\n  id?: string;\n}\n\nclass User implements IUser {\n  constructor(\n    public readonly id: string,\n    public readonly name: string,\n    public color: Color\n  ) {}\n  \n}\n\nexport default User;\n","import React from 'react';\nimport WSApi from 'lib/api/WSApi';\nimport User, { IUser } from 'lib/user/User';\nimport type Request from 'lib/api/Request';\n\ninterface IUserContext {\n  user: User | null;\n  api: WSApi | null;\n  isFetching: boolean;\n  signin: (user: IUser) => any;\n}\n\nexport const UserContext = React.createContext<IUserContext>({\n  user: null,\n  api: null,\n  isFetching: false,\n  signin: () => {},\n});\nUserContext.displayName = 'User';\n\nclass UserProvider extends React.Component<{}, Omit<IUserContext, 'signin'>> {\n\n  signin = (user: IUser) => {\n    this.setState({ isFetching: true });\n\n    const api = WSApi.getInstance();\n    api.ws.addEventListener('open', () => {\n      api.once('signin', (req: Request) => {\n        const { id, name, color } = req.data;\n        const user = new User(id, name, color);\n\n        this.setState({\n          user,\n          api,\n          isFetching: false,\n        });\n      });\n\n      api.send('signin', user);\n    });\n\n    api.ws.addEventListener('close', () => {\n      this.setState({\n        user: null,\n        api: null,\n        isFetching: false,\n      });\n    });\n  };\n\n\n  state = {\n    user: null,\n    api: null,\n    isFetching: false,\n  }\n\n  render() {\n    return (\n      <UserContext.Provider value={{\n        ...this.state,\n        signin: this.signin,\n      }}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default UserProvider;\n","import React from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { UserContext } from 'context/user';\n\n\nclass PrivateRoute extends React.Component<RouteProps> {\n  static contextType = UserContext;\n  context!: React.ContextType<typeof UserContext>\n\n  render() {\n    const { children, ...otherProps } = this.props;\n\n    return (\n      <Route\n        {...otherProps}\n        render={() =>\n          this.context.user ? (\n            children\n          ) : (\n            <Redirect\n              to=\"/signin\"\n            />\n          )\n        }\n      />\n    );\n  }\n}\n\nexport default PrivateRoute;\n","import { withNaming  } from '@bem-react/classname';\n\nexport default withNaming({ e: '__', m: '_', v: '_' });\n","import React from 'react';\nimport cn from 'utils/cn';\nimport './index.scss';\n\nexport type JustifyContent = 'flex-start' | 'center' | 'flex-end' | 'space-around' | 'space-between';\nexport type AlignItems = 'flex-start' | 'center' | 'flex-end';\nexport type FlexWrap = 'nowrap' | 'wrap';\nexport type FlexDirection = 'row' | 'column';\nexport type BreakPoint = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n\ninterface ContainerProps {\n  justifyContent?: JustifyContent;\n  alignItems?: AlignItems;\n  flexWrap?: FlexWrap;\n  flexDirection?: FlexDirection;\n  maxWidth?: BreakPoint;\n}\n\nclass Container extends React.Component<ContainerProps> {\n  render() {\n    const container = cn('container');\n    const { children, ...styleProps } = this.props;\n\n    return (\n      <div\n        className={container(styleProps as Record<string, string>)}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from 'react';\nimport clsx from 'clsx';\nimport cn from 'utils/cn';\nimport './index.scss';\n\ninterface MenuProps {\n  className?: string;\n  orientation?: 'horizontal' | 'vertical';\n}\n\nclass Menu extends React.Component<MenuProps> {\n  static defaultProps: Pick<MenuProps, 'orientation'> = {\n    orientation: 'vertical',\n  };\n\n  render() {\n    const menu = cn('menu');\n    return (\n      <nav className={clsx(this.props.className, menu())}>\n        <ul\n          className={menu('items', { orientation: this.props.orientation })}\n          role=\"menu\"\n        >\n          {this.props.children}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Menu;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport './index.scss';\n\nclass MenuItem extends React.Component {\n\n  render() {\n    const menu = cn('menu');\n    return (\n      <li\n        {...this.props}\n        className={menu('item')}\n        role=\"menuitem\"\n      />\n    );\n  }\n}\n\nexport default MenuItem;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport clsx from 'clsx';\nimport { Menu, MenuItem } from 'components/common/Menu';\nimport { NavLink } from 'react-router-dom';\nimport './index.scss';\n\nconst menuItems = [\n  { anchor: 'WS Chat & Canvas', to: '/', exact: true },\n  { anchor: 'Chat', to: '/chat' },\n  { anchor: 'Canvas', to: '/canvas' },\n];\n\ninterface HeaderMenuProps {\n  className?: string;\n}\n\ninterface HeaderMenuState {\n  isOpen: boolean;\n}\n\nclass HeaderMenu extends React.Component<HeaderMenuProps, HeaderMenuState> {\n  menuWrapperRef = React.createRef<HTMLDivElement>();\n\n  state = {\n    isOpen: false,\n  };\n\n  toggleMenu = () => {\n    this.setState((state) => ({\n      isOpen: !state.isOpen,\n    }));\n  };\n\n  closeMenu = (event: MouseEvent) => {\n    if (!this.menuWrapperRef.current!.contains(event.target as Node)) {\n      this.setState({ isOpen: false });\n    }\n  }\n\n  componentDidMount() {\n    document.documentElement.addEventListener('click', this.closeMenu);\n  }\n\n  componentWillUnmount() {\n    document.documentElement.removeEventListener('click', this.closeMenu);\n  }\n\n  render() {\n    const menu = cn('headerMenu');\n    return (\n      <div className={menu()} ref={this.menuWrapperRef}>\n        <div\n          className={menu('burger', { open: this.state.isOpen })}\n          onClick={this.toggleMenu}\n        >\n        </div>\n        <Menu\n          className={clsx(this.props.className, menu({ open: this.state.isOpen }))}\n          orientation=\"horizontal\"\n        >\n          {menuItems.map((menuItem) => (\n            <MenuItem key={menuItem.to}>\n              <NavLink\n                to={menuItem.to}\n                className={menu('link')}\n                activeClassName=\"menu__link_active\"\n                exact={menuItem.exact}\n              >\n                {menuItem.anchor}\n              </NavLink>\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default HeaderMenu;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport './index.scss';\nimport type { JustifyContent, AlignItems, FlexDirection } from 'components/common/Container';\n\ninterface GridRowProps {\n  justifyContent?: JustifyContent;\n  alignItems?: AlignItems;\n  flexDirection?: FlexDirection;\n}\n\nclass GridRow extends React.Component<GridRowProps> {\n\n  render() {\n    const row = cn('gridRow');\n    const { children, ...styleProps } = this.props;\n    return (\n      <div \n        className={\n          row(styleProps as Record<string, string>)\n        }\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default GridRow;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport type { BreakPoint } from 'components/common/Container';\nimport './index.scss';\n\ntype ColSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\ntype GridColumnProps = {\n  [key in BreakPoint]?: ColSize;\n};\n\nclass GridColumn extends React.Component<GridColumnProps> {\n\n  render() {\n    const { children, ...styleProps } = this.props;\n    const column = cn('gridRow');\n\n    return (\n      <div\n        className={\n          column('column', styleProps as unknown as Record<string, number>)\n        }\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default GridColumn;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport clsx from 'clsx';\nimport './index.scss';\nimport { IUser } from 'lib/user/User';\n\ninterface UserInfoProps {\n  user: IUser;\n  className?: string;\n}\n\nclass UserInfo extends React.Component<UserInfoProps> {\n\n  render() {\n    const userInfo = cn('userInfo');\n\n    return (\n      <div\n        className={clsx(this.props.className, userInfo())}\n      >\n        <div\n          className={userInfo('avatar')}\n          style={{ backgroundColor: this.props.user.color }}\n        >\n          {this.props.user.name[0].toUpperCase()}\n        </div>\n        <span className={userInfo('username')}>{this.props.user.name}</span>\n      </div>\n    );\n  }\n}\n\nexport default UserInfo;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport './index.scss';\nimport Container from 'components/common/Container';\nimport HeaderMenu from './Menu';\nimport { NavLink } from 'react-router-dom';\nimport { GridRow, GridColumn } from 'components/common/Grid';\nimport { UserContext } from 'context/user';\nimport UserInfo from 'components/UserInfo';\n\nclass Header extends React.Component {\n  static contextType = UserContext;\n  context!: React.ContextType<typeof UserContext>\n\n  render() {\n    const header = cn('header');\n    return (\n      <header className={header()}>\n        <Container maxWidth=\"xl\">\n          <GridRow alignItems=\"center\">\n            <GridColumn xs={6} sm={8}>\n              <HeaderMenu />\n            </GridColumn>\n            <GridColumn xs={6} sm={4}>\n              <div className={header('user')}>\n                {this.context.user\n                  ? <UserInfo user={this.context.user} />\n                  : (\n                    <NavLink\n                      to=\"/signin\"\n                      className={header('signinLink')}\n                    >\n                      Sign In\n                    </NavLink>\n                  )\n                }\n              </div>\n            </GridColumn>\n          </GridRow>\n        </Container>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport './index.scss';\n\n\nclass Content extends React.Component {\n  render() {\n    const content = cn('content');\n    return <div className={content()}>{this.props.children}</div>;\n  }\n}\n\nexport default Content;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport Container from 'components/common/Container';\nimport './index.scss';\n\nclass Footer extends React.PureComponent {\n  render() {\n    const footer = cn('footer');\n\n    return (\n      <div className={footer()}>\n        <Container\n          maxWidth=\"xl\"\n          justifyContent=\"flex-end\"\n        >\n          WS Chat & Canvas {new Date().getFullYear()}.\n        </Container>      \n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport Header from './Header';\nimport Content from './Content';\nimport Footer from './Footer';\nimport './index.scss';\n\ninterface LayoutProps {\n  fixed?: boolean;\n}\n\nclass Layout extends React.Component<LayoutProps> {\n\n  render() {\n    const layout = cn('layout');\n    const { fixed } = this.props;\n    return (\n      <div className={layout({ fixed })}>\n        <Header />\n        <Content>{this.props.children}</Content>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport UserInfo from 'components/UserInfo';\nimport type { IUser } from 'lib/user/User';\n\nimport './index.scss';\n\nexport interface IMessage {\n  id: number;\n  author: IUser;\n  text: string;\n  date: Date;\n}\n\ninterface MessageProps {\n  message: IMessage;\n  direction: 'in' | 'out';\n}\n\nclass Message extends React.Component<MessageProps> {\n  render() {\n    const message = cn('message');\n    const { author, date, text } = this.props.message;\n    return (\n      <div\n        className={\n          message({ direction: this.props.direction })\n        }\n      >\n        <div className={message('text')}>\n          {text}\n        </div>\n        <div className={message('author')}>\n          <UserInfo user={author} />\n          <span className={message('date')}>\n            {date.toLocaleString().replace(',', '')}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport Message, { IMessage } from './Message';\nimport './index.scss';\nimport type User from 'lib/user/User';\n\ninterface DialogProps {\n  messages: IMessage[];\n  user: User;\n}\n\nclass Dialog extends React.Component<DialogProps> {\n  messagesRef = React.createRef<HTMLDivElement>();\n\n  componentDidUpdate() {\n    const messages = this.messagesRef.current;\n\n    messages?.scrollBy({\n      top: messages.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  render() {\n    const dialog = cn('dialog');\n\n    return (\n      <div className={dialog()}>\n        <div className={dialog('window')}>\n          <div className={dialog('messages')} ref={this.messagesRef}>\n            {this.props.messages.map((message) => (\n              <Message\n                key={message.id}\n                direction={message.author.id === this.props.user.id ? 'out' : 'in'}\n                message={message}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dialog;\n","import React from 'react';\nimport { UserContext } from 'context/user';\nimport Dialog from 'components/Chat/Dialog';\nimport type { IMessage } from 'components/Chat/Dialog/Message';\nimport type Request from 'lib/api/Request';\n\ninterface DialogContainerState {\n  messages: IMessage[];\n}\n\nclass DialogContainer extends React.Component<{}, DialogContainerState> {\n  static contextType = UserContext;\n  context!: React.ContextType<typeof UserContext>\n\n  state = {\n    messages: [],\n  };\n\n  recieveMessage = (req: Request) => {\n    this.setState((state) => {\n      const message = req.data;\n      message.date = new Date(message.date);\n\n      return { messages: [...state.messages, req.data] };\n    });\n  };\n\n  componentDidMount() {\n    this.context.api?.subscribe('chat', this.recieveMessage);\n  }\n\n  componentWillUnmount() {\n    this.context.api?.unsubscribe('chat', this.recieveMessage);\n  }\n\n  render() {\n    return <Dialog messages={this.state.messages} user={this.context.user!} />;\n  }\n}\n\nexport default DialogContainer;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport { Form, FormikProps } from 'formik';\nimport './index.scss';\n\nexport interface ChatFormValues {\n  text: string;\n}\n\ntype ChatFormProps = FormikProps<ChatFormValues>;\n\nclass ChatForm extends React.Component<ChatFormProps> {\n\n  render() {\n    const chatForm = cn('chatForm');\n    return (\n      <Form\n        className={chatForm()}\n      >\n        <textarea\n          name=\"text\"\n          placeholder=\"What's new ?\"\n          onChange={this.props.handleChange}\n          onBlur={this.props.handleBlur}\n          value={this.props.values.text}\n        />\n        <button\n          type=\"submit\"\n          className={chatForm('submit')}\n        />\n      </Form>\n    );\n  }\n}\n\nexport default ChatForm;\n","import React from 'react';\nimport { Formik, FormikErrors, FormikProps } from 'formik';\nimport ChatForm, { ChatFormValues } from 'components/Chat/Form';\nimport { UserContext } from 'context/user';\n\nclass ChatFormContainer extends React.Component {\n  static contextType = UserContext;\n  context!: React.ContextType<typeof UserContext>\n\n  sendMessage = (text: string) => {\n    this.context.api?.send(\n      'chat',\n      {\n        author: this.context.user,\n        date: new Date(),\n        text,\n      }\n    );\n  }\n\n  render() {\n    return (\n      <Formik\n        initialValues={{\n          text: '',\n        }}\n        onSubmit={(values: ChatFormValues, { resetForm }) => {\n          this.sendMessage(values.text.trim());\n          resetForm();\n        }}\n        validate={(values: ChatFormValues) => {\n          const errors: FormikErrors<ChatFormValues> = {};\n\n          if (!values.text.trim()) {\n            errors.text = 'Text is empty!';\n          }\n\n          return errors;\n        }}\n      >\n        {(props: FormikProps<ChatFormValues>) => <ChatForm {...props} />}\n      </Formik>\n    );\n  }\n}\n\nexport default ChatFormContainer;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport { GridRow, GridColumn } from 'components/common/Grid';\nimport { Dialog, Form } from 'containers/Chat';\nimport './index.scss';\n\n\nclass Chat extends React.Component {\n  render() {\n    const chat = cn('chat');\n    return (\n      <div className={chat()}>\n        <GridRow>\n          <GridColumn xs={12}>\n            <Dialog />\n            <Form />\n          </GridColumn>\n        </GridRow>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport clsx from 'clsx';\nimport UserInfo from 'components/UserInfo';\nimport './index.scss';\nimport type { IUser } from 'lib/user/User';\n\ninterface UserListProps {\n  users: IUser[];\n  className?: string;\n}\n\nclass UserList extends React.Component<UserListProps> {\n  render() {\n    const userList = cn('userList');\n\n    return (\n      <ul className={clsx(this.props.className, userList())}>\n        {this.props.users.map((user) => (\n          <li key={user.name}>\n            <UserInfo user={user} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default UserList;\n","import type { IUser } from 'lib/user/User';\n\nclass UserService {\n  static getAll(): Promise<IUser[]> {\n    return fetch(\n      `${process.env.REACT_APP_BACKEND_URL}/users`,\n      {\n        mode: 'cors',\n      }\n    )\n    .then((res) => res.json()); \n  }\n}\n\nexport default UserService;\n","import React from 'react';\nimport UserList from 'components/UserList';\nimport { UserContext } from 'context/user';\nimport UserService from 'services/UserService';\nimport type { IUser } from 'lib/user/User';\nimport type Request from 'lib/api/Request';\n\ninterface UserOnlineListState {\n  users: IUser[];\n}\n\nclass UserOnlineList extends React.Component<{}, UserOnlineListState> {\n  static contextType = UserContext;\n  context!: React.ContextType<typeof UserContext>\n\n  state = {\n    users: [],\n  };\n\n  join = (req: Request) => {\n    const user: IUser = req.data;\n\n    this.setState((state) => ({\n      users: [...state.users, user]\n    }));\n  };\n\n  leave = (req: Request) => {\n    const leaveUser: IUser = req.data;\n    this.setState((state) => {\n      const leaveUserIndex = state.users.findIndex((user) => user.id === leaveUser.id);\n\n      if (leaveUserIndex !== -1) {\n        state.users.splice(leaveUserIndex, 1);\n        return {\n          users: [...state.users]\n        };\n      }\n    });\n  };\n\n  componentDidMount() {\n    UserService.getAll().then((users) => {\n      this.setState({ users });\n    });\n\n    this.context.api?.subscribe('join', this.join);\n    this.context.api?.subscribe('leave', this.leave);\n  }\n\n  componentWillUnmount() {\n    this.context.api?.unsubscribe('join', this.join);\n    this.context.api?.unsubscribe('leave', this.leave);\n  }\n\n  render() {\n    return <UserList users={this.state.users} />\n  }\n}\n\nexport default UserOnlineList;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport Container from 'components/common/Container';\nimport { GridRow, GridColumn } from 'components/common/Grid';\nimport Chat from 'components/Chat'\nimport OnlineUserList from 'containers/OnlineUserList';\nimport './index.scss';\n\nclass ChatPage extends React.Component {\n  \n  render() {\n    const chatPage = cn('chatPage');\n    return (\n      <div className={chatPage()}>\n        <Container maxWidth=\"xl\">\n          <GridRow>\n            <GridColumn xs={12} sm={9}>\n              <Chat />\n            </GridColumn>\n            <GridColumn xs={12} sm={3}>\n              <div className={chatPage('online')}>\n                <OnlineUserList />\n              </div>\n            </GridColumn>\n          </GridRow>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ChatPage;\n","type Listener = (data?: any) => any;\n\nclass Subscription {\n  private listeners: Record<string, Listener[]> = {};\n\n  subscribe(event: string, listener: Listener) {\n    if (Array.isArray(this.listeners[event])) {\n      this.listeners[event].push(listener);\n    } else {\n      this.listeners[event] = [listener];\n    }\n  }\n\n  unsubscribe(event: string, listener: Listener) {\n    if (this.listeners[event]) {\n      const listenerIndex = this.listeners[event].findIndex((handler) => handler === listener);\n\n      if (listenerIndex !== -1) {\n        this.listeners[event].splice(listenerIndex, 1);\n      }\n\n      if (this.listeners[event].length === 0) {\n        delete this.listeners[event];\n      }\n    }\n  }\n\n  dispatch(event: string, data?: any) {\n    if (this.listeners[event]) {\n      this.listeners[event].forEach((listener) => {\n        listener(data);\n      });\n    }\n  }\n}\n\nexport default Subscription;\n","export interface IPoint {\n  x: number;\n  y: number;\n}\n\nclass Point implements IPoint {\n  constructor(public readonly x: number, public readonly y: number) {}\n\n  isEqual(point: IPoint): boolean {\n    return this.x === point.x && this.y === point.y;\n  }\n\n  static isEquals(point1: IPoint, point2: IPoint): boolean {\n    return point1.x === point2.x && point1.y === point2.y;\n  }\n}\n\nexport default Point;\n","import React from 'react';\nimport Subscription from 'lib/base/subscription';\nimport Point, { IPoint } from 'lib/canvas/Point';\n\ninterface ICanvasContext {\n  lineColor: string;\n  lineWidth: number;\n  width: number;\n  height: number;\n  scale: number;\n  isDrawing: boolean;\n\n  startDraw: (event: React.PointerEvent<HTMLCanvasElement>) => void;\n  endDraw: (event: PointerEvent) => void;\n  movePen: (event: React.PointerEvent<HTMLCanvasElement>) => void;\n  drawLine: (color: string, lineWidth: number, from: IPoint, to: IPoint) => void;\n  setScale: (scale: number) => void;\n  setLineWidth: (width: number) => void;\n  setColor: (color: string) => void;\n\n  subscription: Subscription;\n\n  contextRef: CanvasRenderingContext2D | null;\n  canvasRef?: React.RefObject<HTMLCanvasElement>;\n}\n\ntype CanvasProviderState = Pick<ICanvasContext, 'lineColor' | 'lineWidth' | 'width' | 'height' | 'scale' | 'isDrawing'>;\n\nexport const CanvasContext = React.createContext<ICanvasContext>({\n  lineColor: 'green',\n  lineWidth: 5,\n  width: 1280,\n  height: 688,\n  scale: 1,\n  isDrawing: false,\n  startDraw: () => {},\n  endDraw: () => {},\n  movePen: () => {},\n  drawLine: () => {},\n  setScale: () => {},\n  setLineWidth: () => {},\n  setColor: () => {},\n  subscription: new Subscription(),\n  contextRef: null,\n});\nCanvasContext.displayName = 'Canvas';\n\n\nclass CanvasProvider extends React.Component<{}, CanvasProviderState> {\n  canvasRef = React.createRef<HTMLCanvasElement>();\n  ctx: CanvasRenderingContext2D | null = null;\n  subscription = new Subscription();\n\n  private lastDrawTime: number = 0;\n  private lastPoint = new Point(0, 0);\n\n  state = {\n    lineColor: 'green',\n    lineWidth: 5,\n    width: 1280,\n    height: 688,\n    scale: 1,\n    isDrawing: false,\n  };\n\n  setIsDrawing = (isDrawing: boolean) => {\n    this.setState({ isDrawing });\n  };\n\n  setLineWidth = (lineWidth: number) => {\n    this.setState({ lineWidth });\n  };\n\n  setScale = (scale: number) => {\n    this.setState({ scale });\n  };\n\n  setColor = (lineColor: string) => {\n    this.setState({ lineColor });\n  };\n\n  drawLine = (color: string, lineWidth: number, from: IPoint, to: IPoint) => {\n    if (this.ctx) {\n      this.ctx.strokeStyle = color;\n      this.ctx.lineWidth = lineWidth;\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(from.x, from.y);\n      this.ctx.lineTo(to.x, to.y);\n      this.ctx.stroke();\n    }\n  };\n\n  componentDidMount() {\n    if (this.canvasRef.current) {\n      this.ctx = this.canvasRef.current.getContext('2d');\n\n      this.canvasRef.current!.width = this.state.width;\n      this.canvasRef.current!.height = this.state.height;\n      this.canvasRef.current!.style.touchAction = 'none';\n\n      if (this.ctx) {\n        this.ctx.lineWidth = this.state.lineWidth;\n        this.ctx.lineCap = 'round';\n        this.ctx.lineJoin = 'round';\n      }\n    }\n\n    document.documentElement.addEventListener('pointerup', this.endDraw);\n  }\n\n  componentDidUpdate() {\n    if (this.canvasRef.current) {\n      this.ctx = this.canvasRef.current.getContext('2d');\n\n      if (this.ctx) {\n        this.ctx.lineWidth = this.state.lineWidth;\n        this.ctx.lineCap = 'round';\n        this.ctx.lineJoin = 'round';\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    document.documentElement.removeEventListener('pointerup', this.endDraw);\n  }\n\n  movePen = (event: React.PointerEvent<HTMLCanvasElement>) => {\n    if (this.ctx && this.state.isDrawing) {\n      if (Date.now() - this.lastDrawTime > 10) {\n        const newPoint = new Point(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n        this.draw(newPoint);\n      }\n    }\n  };\n\n  private draw = (newPoint: Point) => {\n    // if (this.ctx && this.state.isDrawing) {\n    //   if (Date.now() - this.lastDrawTime > 10) {\n\n        const lastPointScale = new Point(\n          this.lastPoint.x * this.state.scale,\n          this.lastPoint.y * this.state.scale\n        );\n\n        const newPointScale = new Point(\n          newPoint.x * this.state.scale,\n          newPoint.y * this.state.scale,\n        );\n\n        this.drawLine(this.state.lineColor, this.state.lineWidth, lastPointScale, newPointScale);\n\n        this.subscription.dispatch('draw', {\n          lineColor: this.state.lineColor,\n          lineWidth: this.state.lineWidth,\n          from: lastPointScale,\n          to: newPointScale,\n        });\n\n        this.lastPoint = new Point(newPoint.x, newPoint.y);\n        this.lastDrawTime = Date.now();\n    //   }\n    // }\n  };\n\n  startDraw = (event: React.PointerEvent<HTMLCanvasElement>) => {\n    const point = new Point(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n    this.lastPoint = point;\n    this.setIsDrawing(true);\n\n    this.subscription.dispatch('startDraw', {\n      x: point.x * this.state.scale,\n      y: point.y * this.state.scale,\n    });\n  };\n\n  endDraw = (event: PointerEvent) => {\n    this.setIsDrawing(false);\n\n    const point = new Point(event.offsetX, event.offsetY);\n\n    if (this.lastPoint.isEqual(point)) {\n      this.draw(point);\n    }\n\n    this.subscription.dispatch('endDraw', {\n      x: point.x * this.state.scale,\n      y: point.y * this.state.scale,\n    });\n  };\n\n  render() {\n    return (\n      <CanvasContext.Provider value={{\n        ...this.state,\n        subscription: this.subscription,\n        drawLine: this.drawLine,\n        setScale: this.setScale,\n        setLineWidth: this.setLineWidth,\n        setColor: this.setColor,\n        canvasRef: this.canvasRef,\n        contextRef: this.ctx,\n        movePen: this.movePen,\n        startDraw: this.startDraw,\n        endDraw: this.endDraw,\n      }}>\n        {this.props.children}\n      </CanvasContext.Provider>\n    );\n  }\n}\n\nexport default CanvasProvider;\n","import React from 'react';\nimport { CanvasContext } from 'context/canvas';\nimport cn from 'utils/cn';\nimport './index.scss';\n\nexport class ScalableCanvas extends React.Component {\n  static contextType = CanvasContext;\n  context!: React.ContextType<typeof CanvasContext>\n\n  wrapperRef = React.createRef<HTMLDivElement>();\n  canvasRef = React.createRef<HTMLCanvasElement>();\n\n  componentDidMount() {\n    this.resize();\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  resize = () => {\n    const scale = this.context.width / this.wrapperRef.current!.clientWidth;\n    this.context.setScale(scale);\n  };\n\n  render() {\n    const scalableCanvas = cn('scalableCanvas');\n    return (\n      <div\n        className={scalableCanvas()}\n        ref={this.wrapperRef}\n      >\n        <canvas\n          ref={this.context.canvasRef}\n          width={this.context.width}\n          height={this.context.width * 0.53}\n          onPointerMove={this.context.movePen}\n          onPointerDown={this.context.startDraw}\n        >\n          {this.props.children || `Your browser doesn't support canvas!`}\n        </canvas>\n      </div>\n    );\n  }\n}\n\nexport default ScalableCanvas;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport ScalableCanvas from 'components/blocks/ScalableCanvas';\nimport { CanvasContext } from 'context/canvas';\nimport './index.scss';\n\n\nclass SceneCanvas extends React.Component {\n  static contextType = CanvasContext;\n  context!: React.ContextType<typeof CanvasContext>;\n\n  changeLineWidth = (width: number) => {\n    this.context.setLineWidth(width);\n  };\n\n  render() {\n    const sceneCanvas = cn('sceneCanvas');\n    return (\n      <div\n        className={sceneCanvas()}\n      >\n        <ScalableCanvas />\n        <div className={sceneCanvas('lineWidth')}>\n          <div className={sceneCanvas('widthSelectors')}>\n            {[5, 10, 15].map((width) => (\n              <div\n                key={width}\n                className={sceneCanvas('widthSelector', { width })}\n                onClick={() => this.changeLineWidth(width)}\n              >\n                <span\n                  className={sceneCanvas('widthPicker', { active: width === this.context.lineWidth })}\n                  style={{\n                    backgroundColor: this.context.lineColor,\n                    height: width,\n                    width,\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SceneCanvas;\n","import React from 'react';\nimport SceneCanvas from 'components/blocks/SceneCanvas';\nimport { CanvasContext } from 'context/canvas';\nimport { UserContext } from 'context/user';\nimport type { IPoint } from 'lib/canvas/Point';\nimport type { IUser } from 'lib/user/User';\nimport type Request from 'lib/api/Request';\n\n\ninterface PublicCanvasProps {\n  user: React.ContextType<typeof UserContext>;\n  canvas: React.ContextType<typeof CanvasContext>;\n}\n\ninterface Path {\n  lineColor: string;\n  lineWidth: number;\n  from: IPoint;\n  to: IPoint;\n}\n\ninterface DrawMessage {\n  author: IUser;\n  paths: Path[];\n}\n\nclass PublicCanvas extends React.Component<PublicCanvasProps> {\n  bufferPath: Path[] = [];\n  broadcastTimerID?: NodeJS.Timeout;\n\n  onStartDraw = () => {\n    this.broadcastTimerID = setInterval(this.broadcastPath, 10);\n  };\n\n  onDraw = (path: Path) => {\n    this.bufferPath.push(path);\n  };\n\n  onRecieveDraw = (req: Request) => {\n    const { data } = req;\n\n    if (data.author.id !== this.props.user.user!.id) {\n      data.paths.forEach((path: Path) => {\n        this.props.canvas.drawLine(\n          path.lineColor,\n          path.lineWidth,\n          path.from,\n          path.to\n        );\n      });\n    }\n  };\n\n  broadcastPath = () => {\n    if (this.bufferPath.length === 0) return;\n\n    const data: DrawMessage = {\n      author: this.props.user.user!,\n      paths: this.bufferPath,\n    };\n\n    this.props.user.api?.send('draw', data);\n    this.bufferPath = [];\n\n    if (!this.props.canvas.isDrawing) {\n      clearInterval(this.broadcastTimerID!);\n    }\n  };\n\n  componentDidMount() {\n    this.props.canvas.setColor(this.props.user.user!.color);\n    this.props.canvas.subscription.subscribe('startDraw', this.onStartDraw);\n    this.props.canvas.subscription.subscribe('draw', this.onDraw);\n\n    this.props.user.api?.subscribe('draw', this.onRecieveDraw);\n  }\n\n  componentWillUnmount() {\n    this.props.canvas.subscription.unsubscribe('startDraw', this.onStartDraw);\n    this.props.canvas.subscription.unsubscribe('draw', this.onDraw);\n\n    this.props.user.api?.unsubscribe('draw', this.onRecieveDraw);\n  }\n\n  render() {\n    return <SceneCanvas />;\n  }\n}\n\nexport default PublicCanvas;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport Container from 'components/common/Container';\nimport { GridRow, GridColumn } from 'components/common/Grid';\nimport OnlineUserList from 'containers/OnlineUserList';\nimport CanvasProvider from 'context/canvas';\nimport PublicCanvas from 'containers/PublicCanvas';\nimport { CanvasContext } from 'context/canvas';\nimport { UserContext } from 'context/user';\nimport './index.scss';\n\nclass CanvasPage extends React.Component {\n  render() {\n    const canvasPage = cn('canvasPage');\n\n    return (\n      <div className={canvasPage()}>\n        <Container maxWidth=\"xl\">\n          <GridRow>\n            <GridColumn xs={12} sm={9}>\n              <CanvasProvider>\n                <UserContext.Consumer>\n                  {user => (\n                    <CanvasContext.Consumer>\n                      {canvas => (\n                        <PublicCanvas user={user} canvas={canvas} />\n                      )}\n                    </CanvasContext.Consumer>\n                  )}\n                </UserContext.Consumer>\n              </CanvasProvider>\n            </GridColumn>\n            <GridColumn xs={12} sm={3}>\n              <div className={canvasPage('online')}>\n                <OnlineUserList />\n              </div>\n            </GridColumn>\n          </GridRow>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default CanvasPage;\n","import React from 'react';\nimport clsx from 'clsx';\nimport cn from 'utils/cn';\nimport './index.scss';\n\ninterface FieldProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  invalid?: boolean;\n  helpMessage?: string;\n}\n\nclass Field extends React.Component<FieldProps> {\n  render() {\n    const { \n      type = 'text',\n      className,\n      invalid,\n      label,\n      helpMessage,\n      ...props\n    } = this.props;\n    const input = cn('input');\n    return (\n      <label className={input('label', { hasLabel: Boolean(label) })}>\n        <div className={input('fieldWrapper')}>\n          {label && <span className={input('labelText')}>{label}</span>}\n          <input\n            type={type}\n            className={\n              clsx(className, input({ type, invalid }))\n            }\n            {...props}\n          />\n        </div>\n        {invalid && helpMessage && <small className={input('helpMessage')}>{helpMessage}</small>}\n      </label>\n    );\n  }\n}\n\nexport default Field;\n","export type Color = string;\nexport const colors: Color[] = [\n  '#ffd04e',\n  '#ec7380',\n  '#77dd77',\n  '#50bade',\n  '#ffe5b4',\n  '#d191f9',\n  '#3a9ff1',\n  '#ffc2ce',\n];\n","import React from 'react';\nimport cn from 'utils/cn';\nimport clsx from 'clsx';\nimport { colors } from 'constants/colors';\nimport './index.scss';\n\ninterface ColorSelectorProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  width?: number | string;\n  height?: number | string;\n}\n\nclass ColorSelector extends React.PureComponent<ColorSelectorProps> {\n  static defaultProps: ColorSelectorProps = {\n    name: 'color',\n    width: '25%',\n    height: 50,\n  }\n  render() {\n    const colorSelector = cn('colorSelector');\n    const { className, value, width, height, ...props } = this.props; \n\n    return (\n      <fieldset className={clsx(className, colorSelector())}>\n        {colors.map((color) => (\n          <label className={colorSelector('label')} style={{ width }} key={color}>\n            <input\n              type=\"radio\"\n              className={colorSelector('input')}\n              value={color}\n              checked={color === value}\n              {...props}\n            />\n            <span \n              className={colorSelector('colorSquare')}\n              style={{\n                backgroundColor: color,\n                height,\n              }}\n            />\n          </label>\n        ))}\n      </fieldset>\n    )\n  }\n}\n\nexport default ColorSelector;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport clsx from 'clsx';\nimport './index.scss';\n\nexport type Color = 'primary' | 'second';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>{\n  color?: Color;\n}\n\nclass Button extends React.PureComponent<ButtonProps> {\n  static defaultProps: ButtonProps = {\n    color: 'primary',\n  };\n\n  render() {\n    const button = cn('button');\n    const { className, color, ...props } = this.props;\n    \n    return (\n      <button\n        className={\n          clsx(className, button({ color }))\n        }\n        {...props}\n      />\n    );\n  }\n}\n\nexport default Button;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport { Form, FormikProps } from 'formik';\nimport Field from 'components/common/Field';\nimport ColorSelector from 'components/SelectColor';\nimport Button from 'components/common/Button';\nimport './index.scss';\n\nexport interface AuthFormValues {\n  name: string;\n  color: string;\n}\n\ntype AuthFormProps = FormikProps<AuthFormValues> & {\n  isFetching: boolean;\n};\n\nclass AuthForm extends React.Component<AuthFormProps> {\n  render() {\n    const form = cn('authForm');\n    return (\n      <Form className={form({ fetching: this.props.isFetching })}>\n        <div className={form('fieldGroup')}>\n          <Field\n            name=\"name\"\n            type=\"text\"\n            label=\"Your Name\"\n            placeholder=\"Naruto Uzumaki\"\n            className={form('field')}\n            onChange={this.props.handleChange}\n            onBlur={this.props.handleBlur}\n            value={this.props.values.name}\n            invalid={Boolean(this.props.touched.name && this.props.errors.name)}\n            helpMessage={this.props.errors.name}\n          />\n        </div>\n        <div className={form('fieldGroup')}>\n          <ColorSelector \n            onChange={this.props.handleChange}\n            value={this.props.values.color}\n            height={62.5}\n          />\n        </div>\n        <div className={form('fieldGroup')}>\n          <Button type=\"submit\">Sign In</Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default AuthForm;\n","export const randomNumber = (min: number, max: number) => {\n  const rand = min + Math.random() * (max + 1 - min);\n  return Math.floor(rand);\n};\n","import React from 'react';\nimport { Formik, FormikErrors, FormikProps } from 'formik';\nimport AuthForm, { AuthFormValues } from 'components/AuthForm';\nimport { UserContext } from 'context/user';\nimport { colors } from 'constants/colors';\nimport { randomNumber } from 'utils/random';\n\nclass AuthFormContainer extends React.Component {\n  static contextType = UserContext;\n  context!: React.ContextType<typeof UserContext>\n\n  render() {\n    return (\n      <Formik\n        initialValues={{\n          name: '',\n          color: colors[randomNumber(0, colors.length - 1)],\n        }}\n        onSubmit={(values: AuthFormValues) => {\n          if (!this.context.isFetching) {\n            const user = {\n              name: values.name.trim(),\n              color: values.color,\n            };\n\n            this.context.signin(user);\n          }\n        }}\n        validate={(values: AuthFormValues) => {\n          const errors: FormikErrors<AuthFormValues> = {};\n\n          if (!values.name.trim()) {\n            errors.name = 'User Name is empty!';\n          }\n\n          return errors;\n        }}\n      >\n        {(props: FormikProps<AuthFormValues>) => <AuthForm {...props} isFetching={this.context.isFetching} />}\n      </Formik>\n    );\n  }\n}\n\nexport default AuthFormContainer;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport ScalableCanvas from 'components/blocks/ScalableCanvas';\nimport { CanvasContext } from 'context/canvas';\nimport './index.scss';\n\nclass WelcomeCanvas extends React.Component {\n  static contextType = CanvasContext;\n  context!: React.ContextType<typeof CanvasContext>\n\n  imageRef = React.createRef<HTMLImageElement>();\n\n  onLoadImage = () => {\n    const context = this.context.canvasRef?.current?.getContext('2d');\n\n    if (context) {\n      context.drawImage(this.imageRef.current!, 0, 0, this.context.width, this.context.height);\n    }\n  };\n\n  render() {\n    const welcomeCanvas = cn('welcomeCanvas');\n    return (\n      <div\n        className={welcomeCanvas()}\n      >\n        <ScalableCanvas>\n          <img\n            ref={this.imageRef}\n            src={`${process.env.PUBLIC_URL}/images/welcome.png`}\n            alt=\"Hello :)\"\n            onLoad={this.onLoadImage}\n          />\n        </ScalableCanvas>\n      </div>\n    );\n  }\n}\n\nexport default WelcomeCanvas;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport Container from 'components/common/Container';\nimport { GridRow, GridColumn } from 'components/common/Grid';\nimport AuthForm from 'containers/AuthForm';\nimport CanvasProvider from 'context/canvas';\nimport WelcomeCanvas from 'components/blocks/WelcomeCanvas';\nimport './index.scss';\nimport { UserContext } from 'context/user';\n\nclass MainPage extends React.Component {\n  static contextType = UserContext;\n  context!: React.ContextType<typeof UserContext>\n  \n  render() {\n    const mainPage = cn('mainPage');\n    return (\n      <div className={mainPage()}>\n        <Container maxWidth=\"xl\">\n          <GridRow>\n            <GridColumn xs={12} sm={4} md={3}>\n              <h1 className={mainPage('h1')}>WS Chat & Canvas</h1>\n              {!this.context.user ? (\n                <div className={mainPage('form')}>\n                  <div className={mainPage('formTitle')}>Sign in</div>\n                  <AuthForm />\n                </div>\n              ) : (\n                <div className={mainPage('welcomeText')}>\n                    Hi {this.context.user.name}\n                </div>\n              )}\n            </GridColumn>\n            <GridColumn xs={12} sm={8} md={9}>\n              <CanvasProvider>\n                <WelcomeCanvas />\n              </CanvasProvider>\n            </GridColumn>\n          </GridRow>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport Container from 'components/common/Container';\nimport AuthForm from 'containers/AuthForm';\nimport { Redirect } from 'react-router-dom';\nimport { UserContext } from 'context/user';\nimport './index.scss';\n\nclass SignInPage extends React.Component {\n  static contextType = UserContext;\n  context!: React.ContextType<typeof UserContext>\n\n  render() {\n    const signinPage = cn('signinPage');\n\n    if (this.context.user) {\n      return <Redirect to=\"/chat\" />;\n    }\n\n    return (\n      <div className={signinPage()}>\n        <Container maxWidth=\"xl\" alignItems=\"center\" justifyContent=\"center\">\n          <div className={signinPage('form')}>\n            <h1>Sign In</h1>\n            <AuthForm />\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default SignInPage;\n","import React from 'react';\nimport cn from 'utils/cn';\nimport Container from 'components/common/Container';\nimport './index.scss';\n\nclass NotFound extends React.Component {\n  render() {\n    const notFoundPage = cn('notFoundPage');\n\n    return (\n      <div className={notFoundPage()}>\n        <Container maxWidth=\"xl\" justifyContent=\"center\" alignItems=\"center\">\n          <h1>Page Not Found</h1>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport UserProvider from 'context/user';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport PrivateRoute from 'containers/PrivateRoute';\nimport './App.scss';\nimport 'fontsource-roboto';\n\nimport Layout from 'components/blocks/Layout';\nimport ChatPage from 'components/pages/Chat';\nimport CanvasPage from 'components/pages/Canvas';\nimport MainPage from 'components/pages/Main';\nimport SignInPage from 'components/pages/SignIn';\nimport NotFoundPage from 'components/pages/NotFound';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <UserProvider>\n          <Router>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Layout>\n                    <MainPage />\n                  </Layout>\n                </Route>\n                <PrivateRoute exact path=\"/chat\">\n                    <Layout fixed>\n                      <ChatPage />\n                    </Layout>\n                </PrivateRoute>\n                <PrivateRoute exact path=\"/canvas\">\n                    <Layout fixed>\n                      <CanvasPage />\n                    </Layout>\n                </PrivateRoute>\n                <Route exact path=\"/signin\">\n                  <Layout>\n                    <SignInPage />\n                  </Layout>\n                </Route>\n                <Route path=\"*\">\n                  <Layout fixed>\n                    <NotFoundPage />\n                  </Layout>\n                </Route>\n              </Switch>\n          </Router>\n        </UserProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}